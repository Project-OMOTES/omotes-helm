apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ .Release.Namespace }}
  labels:
    app: omotes-postgres
  name: omotes-postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: omotes-postgres
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: omotes-postgres
    spec:
      containers:
        - env:
            - name: PGDATA
              value: /var/lib/postgresql/data
            - name: POSTGRES_DB
              value: omotes_jobs
            - name: POSTGRES_USER
              valueFrom:
                configMapKeyRef:
                  name: omotes-env-vars-cm
                  key: POSTGRES_ROOT_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: omotes-env-vars-secrets
                  key: POSTGRES_ROOT_PASSWORD
            - name: LOG_LEVEL
              valueFrom:
                configMapKeyRef:
                  name: omotes-env-vars-cm
                  key: LOG_LEVEL
          image: postgres:15.4
          livenessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - root
                - -d
                - omotes_jobs
            failureThreshold: 10
            periodSeconds: 5
            timeoutSeconds: 5
          name: omotes-postgres
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: omotes-postgres-pvc
      restartPolicy: Always
      volumes:
        - name: omotes-postgres-pvc
          persistentVolumeClaim:
            claimName: omotes-postgres-pvc
        - configMap:
            items:
              - key: init.sql
                path: init.sql
            name: omotes-postgres-init-cm
          name: omotes-postgres-init-cm
